//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2016/02/22 - 20:58:46
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using JobsInABA.BL.DTOs;
using JobsInABA.DAL.Entities;

namespace JobsInABA.BL.DTOs.Assemblers
{

    /// <summary>
    /// Assembler for <see cref="BusinessEmail"/> and <see cref="BusinessEmailDTO"/>.
    /// </summary>
    public static partial class BusinessEmailAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="BusinessEmailDTO"/> converted from <see cref="BusinessEmail"/>.</param>
        static partial void OnDTO(this BusinessEmail entity, BusinessEmailDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="BusinessEmail"/> converted from <see cref="BusinessEmailDTO"/>.</param>
        static partial void OnEntity(this BusinessEmailDTO dto, BusinessEmail entity);

        /// <summary>
        /// Converts this instance of <see cref="BusinessEmailDTO"/> to an instance of <see cref="BusinessEmail"/>.
        /// </summary>
        /// <param name="dto"><see cref="BusinessEmailDTO"/> to convert.</param>
        public static BusinessEmail ToEntity(this BusinessEmailDTO dto)
        {
            if (dto == null) return null;

            var entity = new BusinessEmail();

            entity.BusinessEmailID = dto.BusinessEmailID;
            entity.BusinessID = dto.BusinessID;
            entity.EmailID = dto.EmailID;
            entity.IsPrimary = dto.IsPrimary;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="BusinessEmail"/> to an instance of <see cref="BusinessEmailDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="BusinessEmail"/> to convert.</param>
        public static BusinessEmailDTO ToDTO(this BusinessEmail entity)
        {
            if (entity == null) return null;

            var dto = new BusinessEmailDTO();

            dto.BusinessEmailID = entity.BusinessEmailID;
            dto.BusinessID = entity.BusinessID;
            dto.EmailID = entity.EmailID;
            dto.IsPrimary = entity.IsPrimary;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="BusinessEmailDTO"/> to an instance of <see cref="BusinessEmail"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<BusinessEmail> ToEntities(this IEnumerable<BusinessEmailDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="BusinessEmail"/> to an instance of <see cref="BusinessEmailDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<BusinessEmailDTO> ToDTOs(this IEnumerable<BusinessEmail> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
