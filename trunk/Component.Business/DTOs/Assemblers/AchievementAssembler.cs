//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2016/02/22 - 20:58:45
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using JobsInABA.BL.DTOs;
using JobsInABA.DAL.Entities;

namespace JobsInABA.BL.DTOs.Assemblers
{

    /// <summary>
    /// Assembler for <see cref="Achievement"/> and <see cref="AchievementDTO"/>.
    /// </summary>
    public static partial class AchievementAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="AchievementDTO"/> converted from <see cref="Achievement"/>.</param>
        static partial void OnDTO(this Achievement entity, AchievementDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="Achievement"/> converted from <see cref="AchievementDTO"/>.</param>
        static partial void OnEntity(this AchievementDTO dto, Achievement entity);

        /// <summary>
        /// Converts this instance of <see cref="AchievementDTO"/> to an instance of <see cref="Achievement"/>.
        /// </summary>
        /// <param name="dto"><see cref="AchievementDTO"/> to convert.</param>
        public static Achievement ToEntity(this AchievementDTO dto)
        {
            if (dto == null) return null;

            var entity = new Achievement();

            entity.AchievementID = dto.AchievementID;
            entity.Name = dto.Name;
            entity.Date = dto.Date;
            entity.UserID = dto.UserID;
            entity.BusinessID = dto.BusinessID;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="Achievement"/> to an instance of <see cref="AchievementDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="Achievement"/> to convert.</param>
        public static AchievementDTO ToDTO(this Achievement entity)
        {
            if (entity == null) return null;

            var dto = new AchievementDTO();

            dto.AchievementID = entity.AchievementID;
            dto.Name = entity.Name;
            dto.Date = entity.Date;
            dto.UserID = entity.UserID;
            dto.BusinessID = entity.BusinessID;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="AchievementDTO"/> to an instance of <see cref="Achievement"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<Achievement> ToEntities(this IEnumerable<AchievementDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="Achievement"/> to an instance of <see cref="AchievementDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<AchievementDTO> ToDTOs(this IEnumerable<Achievement> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
