//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2016/02/22 - 20:58:48
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using JobsInABA.BL.DTOs;
using JobsInABA.DAL.Entities;

namespace JobsInABA.BL.DTOs.Assemblers
{

    /// <summary>
    /// Assembler for <see cref="Phone"/> and <see cref="PhoneDTO"/>.
    /// </summary>
    public static partial class PhoneAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="PhoneDTO"/> converted from <see cref="Phone"/>.</param>
        static partial void OnDTO(this Phone entity, PhoneDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="Phone"/> converted from <see cref="PhoneDTO"/>.</param>
        static partial void OnEntity(this PhoneDTO dto, Phone entity);

        /// <summary>
        /// Converts this instance of <see cref="PhoneDTO"/> to an instance of <see cref="Phone"/>.
        /// </summary>
        /// <param name="dto"><see cref="PhoneDTO"/> to convert.</param>
        public static Phone ToEntity(this PhoneDTO dto)
        {
            if (dto == null) return null;

            var entity = new Phone();

            entity.PhoneID = dto.PhoneID;
            entity.AddressbookID = dto.AddressbookID;
            entity.CountryID = dto.CountryID;
            entity.Number = dto.Number;
            entity.Ext = dto.Ext;
            entity.PhoneTypeID = dto.PhoneTypeID;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="Phone"/> to an instance of <see cref="PhoneDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="Phone"/> to convert.</param>
        public static PhoneDTO ToDTO(this Phone entity)
        {
            if (entity == null) return null;

            var dto = new PhoneDTO();

            dto.PhoneID = entity.PhoneID;
            dto.AddressbookID = entity.AddressbookID;
            dto.CountryID = entity.CountryID;
            dto.Number = entity.Number;
            dto.Ext = entity.Ext;
            dto.PhoneTypeID = entity.PhoneTypeID;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="PhoneDTO"/> to an instance of <see cref="Phone"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<Phone> ToEntities(this IEnumerable<PhoneDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="Phone"/> to an instance of <see cref="PhoneDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<PhoneDTO> ToDTOs(this IEnumerable<Phone> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
