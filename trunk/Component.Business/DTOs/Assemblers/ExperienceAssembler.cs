//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2016/02/22 - 20:58:47
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using JobsInABA.BL.DTOs;
using JobsInABA.DAL.Entities;

namespace JobsInABA.BL.DTOs.Assemblers
{

    /// <summary>
    /// Assembler for <see cref="Experience"/> and <see cref="ExperienceDTO"/>.
    /// </summary>
    public static partial class ExperienceAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="ExperienceDTO"/> converted from <see cref="Experience"/>.</param>
        static partial void OnDTO(this Experience entity, ExperienceDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="Experience"/> converted from <see cref="ExperienceDTO"/>.</param>
        static partial void OnEntity(this ExperienceDTO dto, Experience entity);

        /// <summary>
        /// Converts this instance of <see cref="ExperienceDTO"/> to an instance of <see cref="Experience"/>.
        /// </summary>
        /// <param name="dto"><see cref="ExperienceDTO"/> to convert.</param>
        public static Experience ToEntity(this ExperienceDTO dto)
        {
            if (dto == null) return null;

            var entity = new Experience();

            entity.ExperienceID = dto.ExperienceID;
            entity.UserID = dto.UserID;
            entity.BusinessID = dto.BusinessID;
            entity.JobPossition = dto.JobPossition;
            entity.StartDate = dto.StartDate;
            entity.EndDate = dto.EndDate;
            entity.IsCurrent = dto.IsCurrent;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="Experience"/> to an instance of <see cref="ExperienceDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="Experience"/> to convert.</param>
        public static ExperienceDTO ToDTO(this Experience entity)
        {
            if (entity == null) return null;

            var dto = new ExperienceDTO();

            dto.ExperienceID = entity.ExperienceID;
            dto.UserID = entity.UserID;
            dto.BusinessID = entity.BusinessID;
            dto.JobPossition = entity.JobPossition;
            dto.StartDate = entity.StartDate;
            dto.EndDate = entity.EndDate;
            dto.IsCurrent = entity.IsCurrent;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="ExperienceDTO"/> to an instance of <see cref="Experience"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<Experience> ToEntities(this IEnumerable<ExperienceDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="Experience"/> to an instance of <see cref="ExperienceDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<ExperienceDTO> ToDTOs(this IEnumerable<Experience> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
