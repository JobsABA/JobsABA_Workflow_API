//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2016/02/22 - 20:58:49
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using JobsInABA.BL.DTOs;
using JobsInABA.DAL.Entities;

namespace JobsInABA.BL.DTOs.Assemblers
{

    /// <summary>
    /// Assembler for <see cref="TypeCode"/> and <see cref="TypeCodeDTO"/>.
    /// </summary>
    public static partial class TypeCodeAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="TypeCodeDTO"/> converted from <see cref="TypeCode"/>.</param>
        static partial void OnDTO(this JobsInABA.DAL.Entities.TypeCode entity, TypeCodeDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="TypeCode"/> converted from <see cref="TypeCodeDTO"/>.</param>
        static partial void OnEntity(this TypeCodeDTO dto, JobsInABA.DAL.Entities.TypeCode entity);

        /// <summary>
        /// Converts this instance of <see cref="TypeCodeDTO"/> to an instance of <see cref="TypeCode"/>.
        /// </summary>
        /// <param name="dto"><see cref="TypeCodeDTO"/> to convert.</param>
        public static JobsInABA.DAL.Entities.TypeCode ToEntity(this TypeCodeDTO dto)
        {
            if (dto == null) return null;

            var entity = new JobsInABA.DAL.Entities.TypeCode();

            entity.TypeCodeID = dto.TypeCodeID;
            entity.Name = dto.Name;
            entity.Code = dto.Code;
            entity.Description = dto.Description;
            entity.ClassTypeID = dto.ClassTypeID;
            entity.ParentTypeCodeID = dto.ParentTypeCodeID;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="TypeCode"/> to an instance of <see cref="TypeCodeDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="TypeCode"/> to convert.</param>
        public static TypeCodeDTO ToDTO(this JobsInABA.DAL.Entities.TypeCode entity)
        {
            if (entity == null) return null;

            var dto = new TypeCodeDTO();

            dto.TypeCodeID = entity.TypeCodeID;
            dto.Name = entity.Name;
            dto.Code = entity.Code;
            dto.Description = entity.Description;
            dto.ClassTypeID = entity.ClassTypeID;
            dto.ParentTypeCodeID = entity.ParentTypeCodeID;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="TypeCodeDTO"/> to an instance of <see cref="TypeCode"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<JobsInABA.DAL.Entities.TypeCode> ToEntities(this IEnumerable<TypeCodeDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="TypeCode"/> to an instance of <see cref="TypeCodeDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<TypeCodeDTO> ToDTOs(this IEnumerable<JobsInABA.DAL.Entities.TypeCode> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
